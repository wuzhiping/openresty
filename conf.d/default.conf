# nginx.vh.default.conf  --  docker-openresty
#
# This file is installed to:
#   `/etc/nginx/conf.d/default.conf`
#
# It tracks the `server` section of the upstream OpenResty's `nginx.conf`.
#
# This config (and any other configs in `etc/nginx/conf.d/`) is loaded by
# default by the `include` directive in `/usr/local/openresty/nginx/conf/nginx.conf`.
#
# See https://github.com/openresty/docker-openresty/blob/master/README.md#nginx-config-files
#



lua_shared_dict limit_count_store 100m;
 
init_by_lua_block {
    require "resty.core"
}

server {
    listen       80;
    server_name  localhost;

    #charset koi8-r;
    #access_log  /var/log/nginx/host.access.log  main;

    location / {
        root   /usr/local/openresty/nginx/html;
        index  index.html index.htm;
    }

    location /oauth2 {
        
        proxy_pass http://a.feg.com.tw;
        header_filter_by_lua_block {
            ngx.header['Location'] = '--abc--';
            ngx.status = 201;
            
        }
    }

    location ~ ^/lua/(\w+) {

        access_by_lua_block {
          local limit_count = require "resty.limit.count"
   
          -- rate: 10/min 
          local lim, err = limit_count.new("limit_count_store", 120, 60)
          if not lim then
              ngx.log(ngx.ERR, "failed to instantiate a resty.limit.count object: ", err)
              return ngx.exit(500)
          end
   
          local key = ngx.var.binary_remote_addr
          local delay, err = lim:incoming(key, true)
          -- 如果请求数在限制范围内，则当前请求被处理的延迟（这种场景下始终为0，因为要么被处理要么被拒绝）和将被处理的请求的剩余数
          if not delay then
              if err == "rejected" then
                  return ngx.exit(503)
              end
   
              ngx.log(ngx.ERR, "failed to limit count: ", err)
              return ngx.exit(500)
          end
        } 

        content_by_lua_file lua/$1.lua;
    }

    #error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/local/openresty/nginx/html;
    }

    # proxy the PHP scripts to Apache listening on 127.0.0.1:80
    #
    #location ~ \.php$ {
    #    proxy_pass   http://127.0.0.1;
    #}

    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
    #
    #location ~ \.php$ {
    #    root           /usr/local/openresty/nginx/html;
    #    fastcgi_pass   127.0.0.1:9000;
    #    fastcgi_index  index.php;
    #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
    #    include        fastcgi_params;
    #}

    # deny access to .htaccess files, if Apache's document root
    # concurs with nginx's one
    #
    #location ~ /\.ht {
    #    deny  all;
    #}
}
